image: ubuntu:16.04

variables:
  LATEST_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:latest

stages:
  - build
  - deploy

build:
  stage: build
  image: docker:stable
  script:
    - cd src/main/resources
    - rm application.properties
    - touch application.properties
    - echo "quarkus.datasource.driver=org.postgresql.Driver" >> application.properties
    - echo "quarkus.datasource.url=jdbc:postgresql://$PROD_DB_HOST/$PROD_DB_NAME" >> application.properties
    - echo "quarkus.datasource.username=$PROD_DB_USERNAME" >> application.properties
    - echo "quarkus.datasource.password=$PROD_DB_PASSWORD" >> application.properties
    - echo "quarkus.http.cors=true" >> application.properties
    - echo "quarkus.http.cors.origins=http://aproc.urcamp.edu.br" >> application.properties
    - echo "" >> application.properties
    - echo "#Development configurations" >> application.properties
    - echo "%dev.quarkus.hibernate-orm.log.sql=true" >> application.properties
    - echo "" >> application.properties
    - echo "#Production configurations" >> application.properties
    - echo "%prod.quarkus.hibernate-orm.log.sql=false" >> application.properties
    - echo "" >> application.properties
    - echo "quarkus.hibernate-orm.database.generation=none" >> application.properties
    - echo "quarkus.smallrye-jwt.enabled=true" >> application.properties
    - echo "mp.jwt.verify.publickey.location=META-INF/resources/publicKey.pem" >> application.properties
    - echo "smallrye.jwt.new-token.issuer=http://api.aproc.urcamp.edu.br" >> application.properties
    - echo "mp.jwt.verify.issuer=http://api.aproc.urcamp.edu.br" >> application.properties
    - echo "smallrye.jwt.sign.key-location=META-INF/privateKey.pem" >> application.properties
    - echo "smallrye.jwt.new-token.lifespan=7200" >> application.properties
    - echo "smallrye.jwt.token.kid=META-INF/privateKey.pem" >> application.properties
    - cd ../../../
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $LATEST_IMAGE -f ./src/main/docker/Dockerfile .
    - docker push $LATEST_IMAGE
  only:
    - master

deploy:
  stage: deploy
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --stack $RANCHER_STACK --service $RANCHER_SERVICE --new-image $LATEST_IMAGE --start-before-stopping
  only:
    - master
